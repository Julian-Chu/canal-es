version: '3.1'

services:
    mysql:
      image: mysql:latest
      volumes:
        - ./mysql/my.cnf:/etc/my.cnf
        - ./mysql/init:/docker-entrypoint-initdb.d
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=mysql
      ports:
        - "3306:3306"

    canal:
      image: canal/canal-server
      environment:
        - canal.instance.master.address=mysql:3306
        - canal.instance.dbUsername=canal
        - canal.instance.dbPassword=canal
        - canal.instance.connectionCharset=UTF-8
        - canal.instance.tsdb.enable=true
        - canal.instance.gtidon=false
#        - canal.instance.filter.regex=.*\\..*
        - canal.auto.scan=false
        - canal.destinations=example
      ports:
        - "11111:11111"
      depends_on:
        - mysql

    zookeeper:
      image: wurstmeister/zookeeper
      ports:
        - "2181:2181"
      expose:
        - "2181"

    kafka:
      image: wurstmeister/kafka
      ports:
        - "9092:9092"
        - "8082:8082"
        - "8083:8083"
      environment:
#        DOCKER_API_VERSION: 1.22
        - KAFKA_ADVERTISED_HOST_NAME=kafka
        - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        - KAFKA_CONNECT_BOOTSTRAP_SERVERS=localhost:9092

        - KAFKA_CONNECT_REST_PORT=8082
        - KAFKA_CONNECT_REST_ADVERTISED_HOST_NAME=localhost

        - KAFKA_CONNECT_KEY_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
        - KAFKA_CONNECT_VALUE_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
        - KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=0
        - KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=0

        - KAFKA_CONNECT_INTERNAL_KEY_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
        - KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER="org.apache.kafka.connect.json.JsonConverter"
        - KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE=0
        - KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE=0

        - KAFKA_CONNECT_OFFSET_STORAGE_FILE_FILENAME="/tmp/connect.offsets"
        # Flush much faster than normal, which is useful for testing/debugging
        - KAFKA_CONNECT_OFFSET_FLUSH_INTERVAL_MS=10000
#      volumes:
#        - /var/run/docker.sock:/var/run/docker.sock
      depends_on:
        - zookeeper

    es:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
      ports:
        - "9200:9200"
        - "9300:9300"

      environment:
        discovery.type: single-node

    kibana:
      image: docker.elastic.co/kibana/kibana:7.14.0
      ports:
        - "5601:5601"
      environment:
        - ELASTICSEARCH_HOSTS=http://es:9200
      depends_on:
        - es

    canal-kafka-connector:
      build:
        context: canal-kafka-connector
      command: "go run main.go"
      depends_on:
        - kafka
        - mysql
      environment:
        - canalAddr=canal
        - kafkaAddr=kafka